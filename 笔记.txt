Node.js是什么？
    Node.js 不是一门语言
    Node.js 不是库、不是框架
    Node.js 是一个javascript运行时环境
    简单点来讲就是node.js 可以解析和执行Javascript
    以前只有浏览器可以解析Javascript代码
    也就是说现在的javascript可以完全脱离浏览器来运行，一切都归功于 node.js

Node.js中的Javascript
    没有BOM、DOM
    EcmaScript
    在Node这个JavaScript执行环境中 为Javascript提供了一些服务器级别的操作API
        例如文件读写
        网络服务的构建
        网络通信
        Http服务器
        等处理。。。

Node特性
    event-driven 事件驱动
    non-blocking I/O model非阻塞IO模型(异步)
    lightweight and efficient 轻量和高效
    随着课程慢慢的学习 你会明白什么是事件驱动、非阻塞IO模型


hello world
    1.创建编写JavaScript脚本文件
    2.打开终端，定位到脚本文件所属目录
    3.输入 node文件名 执行对应文件
注意:文件名不要使用node.js来命名


浏览器中的JavaScript是没有文件操作能力的
但是Node中的Javascript具有文件操作的能力

1.解析执行 JavaScript
2.读写文件
3.http

Node中的JavaScript
    EcmaScript
        没有BOM、DOM
    核心模块
    第三方模块
    用户自定义模块

核心模块
    Node为JavaScript提供了很多服务器级别的API，这些API绝大多数被包装到了一个具名的核心模块中了。
    例如文件操作的fs核心模块，http服务构建的 http模块, path路径操作模块、 os操作系统信息模块。。。

    以后只要是一个核心模块，就要马上想到如果想要使用它，就必须：
    let fs = require('fs')
    let http = require('http')

所有联网的程序都需要进行网络通信
计算机中只有一个物理网卡，而且同一个局域网中，网卡的地址必须是唯一的。
网卡是通过唯一的ip地址来进行定位的。

www.baidu.com
DNS -> ip地址
25.26.29.38

IP地址用来定位计算机
端口号用来定位具体应用程序
（所有需要联网通信的软件都必须具有端口号）

cmd -> ipconfig 查看ip地址

IP地址用来定位计算机
端口号用来定位具体的应用程序
所有需要联网通信的应用都会占用一个端口号
端口号范围从 0 - 65536之间
在计算机中有一些默认端口号，最好不要去使用
    例http服务的80
我们在开发过程中使用一些简单好记的就可以了，例如3000，5000 等没什么含义
可以同时开启多个服务，但一定要确保不同服务占用的端口号不一致才可以
说白了，在一台计算机中，同一个端口号同一时间只能被一个程序占用

Content-Type

    在服务器默认发送的数据，其实是utf8编码的内容
    但在浏览器不知道你是utf8编码的内容
    浏览器在不知道服务器响应内容的编码的情况下按照当前操作系统的默认编码去解析
    中文操作系统默认是 gbk
    解决方法就是正确的告诉浏览器，我给你发送的内容是什么编码的
    在http协议中，Content-Type 就是用来告诉对方我发送给你的数据内容是什么类型
    res.setHeader('Content-Type','text/plain;charset=utf-8')
    res.end('hello 世界')

    对照表：https://tool.oschina.net/commons

    1.结合 fs 发送文件中的数据
    2.Content-Type
     https://tool.oschina.net/commons
     不同的资源对应不同的Content-Type 是不一样的
     图片是不需要指定编码
     一般只为字符数据才指定编码

    除了 Content-Type 可以用来指定编码，也可以在 HTML 页面中 通过 meta元素来生命当前编码格式，浏览器也能识别出来


art-template
art-template 不仅可以在浏览器使用，也可以在Node中使用

安装：
 cnpm install art-template
 该命令在哪执行就会把包安装下载到哪里。默认会下载到 node_modules目录中
 注意：在浏览器中需要引入 lib/template-web.js 文件
 强调：模板引擎不关注你的字符串内容，只关心自己能认识的模板标记语法，例如{{}}
 {{}}又称之为 mustache 语法，八字胡阿

 在Node中使用 art-template 模板引擎
 模板引擎最早就是诞生于服务器领域，后来才发展到了前端。

 1.安装：cnpm install art-template
 2.在需要使用的模块文件中加载 art-template
    只需要使用 require 方法加载就可以了: require('art-template')
    参数中的 art-template 就是你下载的包的名字
    也就是说你 install 的名字是什么，则你require() 中的就是什么
 3.查看文档，使用模板引擎的API